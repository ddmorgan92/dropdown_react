[{"C:\\Users\\Taiwan\\Downloads\\Programming Projects\\2020\\React\\facebook\\src\\App.js":"1","C:\\Users\\Taiwan\\Downloads\\Programming Projects\\2020\\React\\facebook\\src\\index.js":"2"},{"size":4373,"mtime":1606753043036,"results":"3","hashOfConfig":"4"},{"size":221,"mtime":1606683541300,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1364nyz",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Taiwan\\Downloads\\Programming Projects\\2020\\React\\facebook\\src\\App.js",["11","12","13"],"import './App.css';\nimport { ReactComponent as LogoIcon } from './icons/logo.svg'\nimport { ReactComponent as AvatarIcon } from './icons/avatar.svg'\nimport { ReactComponent as ArrowIcon } from './icons/arrow.svg'\nimport { ReactComponent as BellIcon } from './icons/bell.svg'\nimport { ReactComponent as BoltIcon } from './icons/bolt.svg'\nimport { ReactComponent as CaretIcon } from './icons/caret.svg'\nimport { ReactComponent as ChevronIcon } from './icons/chevron.svg'\nimport { ReactComponent as CogIcon } from './icons/cog.svg'\nimport { ReactComponent as MessengerIcon } from './icons/messenger.svg'\nimport { ReactComponent as PlusIcon } from './icons/plus.svg'\n\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar>\n        <div className=\"title\">{<LogoIcon/>}</div>\n        <NavItem icon={<CaretIcon/>}>\n          <DropdownMenu></DropdownMenu>\n        </NavItem>\n        <NavItem icon={<PlusIcon/>}/>\n        <NavItem icon={<BellIcon/>}/>\n        <NavItem icon={<MessengerIcon/>}/>\n      </Navbar>\n      <div className=\"content-placeholder\"></div>\n      <FooterMenu>\n        <NavItem icon={<PlusIcon/>} title={\"Twitter\"}/>\n        <NavItem icon={<BellIcon/>} title={\"Facebook\"}/>\n        <NavItem icon={<MessengerIcon/>} title={\"GitHub\"}/>\n      </FooterMenu>\n    </div>\n  );\n}\n\nfunction Navbar(props){\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-nav\">{ props.children }</ul>\n    </nav>\n  );\n}\n\nfunction NavItem(props) {\n\n  const [open, setOpen] = useState(false);\n\n  return(\n    <li className=\"nav-item\">\n      <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\n        {props.icon}\n      </a>\n        {props.title}\n      {open && props.children}\n    </li>\n  );\n}\n\n\nfunction DropdownMenu() {\n\n  const [activeMenu, setActiveMenu] = useState('main');\n  const [menuHeight, setMenuHeight] = useState(null);\n\n  function calcHeight(element) {\n    const height = element.offsetHeight;\n    setMenuHeight(height);\n  }\n\n  function DropdownItems(props){\n    return(\n      <a href=\"#\" className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\n        <span className=\"icon-left\">{props.leftIcon}</span>\n        {props.children}\n        <span className=\"icon-right\">{props.rightIcon}</span>\n      </a>\n    );\n  }\n\n  return(\n    <div className=\"dropdown\" style={{ height: menuHeight }}>\n      <CSSTransition \n      in={activeMenu === 'main'} \n      unmountOnExit \n      timeout={500} \n      classNames=\"menu-primary\"\n      onEnter={calcHeight}\n      >\n        <div className = \"menu\">\n\n          <DropdownItems\n          leftIcon={<AvatarIcon />}>\n            My Profile\n          </DropdownItems>\n\n          <DropdownItems\n          leftIcon={<CogIcon />}\n          rightIcon={<ChevronIcon />}\n          goToMenu=\"settings\">\n            Settings\n          </DropdownItems>\n\n        </div>\n      </CSSTransition>\n\n      <CSSTransition \n      in={activeMenu === 'settings'} \n      unmountOnExit \n      timeout={500} \n      classNames=\"menu-secondary\"\n      onEnter={calcHeight}\n      >\n        <div className = \"menu\">\n\n          <DropdownItems\n            leftIcon={<ArrowIcon />}\n            goToMenu=\"main\">\n            Back\n          </DropdownItems>\n\n          <DropdownItems\n          leftIcon={<CogIcon />}>\n            Settings\n          </DropdownItems>\n\n          <DropdownItems\n          leftIcon={<CogIcon />}>\n            Settings\n          </DropdownItems>\n\n          <DropdownItems\n          leftIcon={<CogIcon />}>\n            Settings\n          </DropdownItems>\n\n          <DropdownItems\n          leftIcon={<CogIcon />}>\n            Profile\n          </DropdownItems>\n        \n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nfunction FooterMenu(props) {\n  return(\n    <div className=\"footer\">\n      <div className=\"footer-social\">\n        <h1>Footer Social</h1>\n        <ul>\n          { props.children } \n        </ul>\n      </div>\n      <div className=\"footer-info\">\n        <h1>Footer Info</h1>\n        <ul>\n          <li className = \"footer-title\">Company Name</li>\n          <li>12345 Address St</li>\n          <li>Address City, State, Zip</li>\n          <li>1-800-urphone</li>\n          <li>contactemail@company.com</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\Taiwan\\Downloads\\Programming Projects\\2020\\React\\facebook\\src\\index.js",[],{"ruleId":"14","severity":1,"message":"15","line":6,"column":28,"nodeType":"16","messageId":"17","endLine":6,"endColumn":36},{"ruleId":"18","severity":1,"message":"19","line":52,"column":7,"nodeType":"20","endLine":52,"endColumn":74},{"ruleId":"18","severity":1,"message":"19","line":74,"column":7,"nodeType":"20","endLine":74,"endColumn":105},"no-unused-vars","'BoltIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]